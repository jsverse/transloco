"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[42],{6449:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var s=t(4848),r=t(8453),i=t(6025);const o={title:"Generate Locale Files using Google Translate",description:"Recipe - Generate Locale Files using Google Translate | Transloco Angular i18n"},a=void 0,l={id:"recipes/google-translate-integration",title:"Generate Locale Files using Google Translate",description:"Recipe - Generate Locale Files using Google Translate | Transloco Angular i18n",source:"@site/docs/recipes/google-translate-integration.mdx",sourceDirName:"recipes",slug:"/recipes/google-translate-integration",permalink:"/transloco/docs/recipes/google-translate-integration",draft:!1,unlisted:!1,editUrl:"https://github.com/jsverse/transloco/edit/master/docs/docs/recipes/google-translate-integration.mdx",tags:[],version:"current",frontMatter:{title:"Generate Locale Files using Google Translate",description:"Recipe - Generate Locale Files using Google Translate | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Using xliff",permalink:"/transloco/docs/recipes/xliff"}},c={},u=[{value:"Steps",id:"steps",level:2},{value:"Expected output:",id:"expected-output",level:2}];function g(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["Many thanks to ",(0,s.jsx)(e.a,{href:"https://github.com/born2net",children:"born2net"})," for sharing this. ",(0,s.jsx)(e.a,{href:"https://github.com/jsverse/transloco/issues/261",children:"(#261)"})]}),"\n",(0,s.jsx)(e.p,{children:"The script will  read the en.json translation file and will generate new localized files based on what's defined in the script."}),"\n",(0,s.jsx)(e.h2,{id:"steps",children:"Steps"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Uncomment createLocalFiles() one time to create all the files: he.json, ca.json etc..."}),"\n",(0,s.jsx)(e.li,{children:"Comment/Delete createLocalFiles() as you no longer need it"}),"\n",(0,s.jsx)(e.li,{children:"Provide your google key via process.env.GOOGLE_KEY"}),"\n",(0,s.jsx)(e.li,{children:"Run the script to populate the translations, re-run it whenever you make changes to your en.json"}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"Note: this script requires google-translate"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"\n#!/usr/bin/env node\nconst fs = require('fs');\nconst googleTranslate = require('google-translate')(process.env.GOOGLE_KEY);\nconst i18Dir = './src/assets/i18n';\nconst defaultSourceLang = 'en';\nconst codes = {\n    Afrikaans: 'af',\n    Irish: 'ga',\n    Albanian: 'sq',\n    Italian: 'it',\n    Arabic: 'ar',\n    Japanese: 'ja',\n    Azerbaijani: 'az',\n    Kannada: 'kn',\n    Basque: 'eu',\n    Korean: 'ko',\n    Bengali: 'bn',\n    Latin: 'la',\n    Belarusian: 'be',\n    Latvian: 'lv',\n    Bulgarian: 'bg',\n    Lithuanian: 'lt',\n    Catalan: 'ca',\n    Macedonian: 'mk',\n    ChineseSimplified: 'zh-CN',\n    Malay: 'ms',\n    ChineseTraditional: 'zh-TW',\n    Maltese: 'mt',\n    Croatian: 'hr',\n    Norwegian: 'no',\n    Czech: 'cs',\n    Persian: 'fa',\n    Danish: 'da',\n    Polish: 'pl',\n    Dutch: 'nl',\n    Portuguese: 'pt',\n    English: 'en',\n    Romanian: 'ro',\n    Esperanto: 'eo',\n    Russian: 'ru',\n    Estonian: 'et',\n    Serbian: 'sr',\n    Filipino: 'tl',\n    Slovak: 'sk',\n    Finnish: 'fi',\n    Slovenian: 'sl',\n    French: 'fr',\n    Spanish: 'es',\n    Galician: 'gl',\n    Swahili: 'sw',\n    Georgian: 'ka',\n    Swedish: 'sv',\n    German: 'de',\n    Tamil: 'ta',\n    Greek: 'el',\n    Telugu: 'te',\n    Gujarati: 'gu',\n    Thai: 'th',\n    Haitian: 'ht',\n    Turkish: 'tr',\n    Hebrew: 'he',\n    Ukrainian: 'uk',\n    Hindi: 'hi',\n    Urdu: 'ur',\n    Hungarian: 'hu',\n    Vietnamese: 'vi',\n    Icelandic: 'is',\n    Welsh: 'cy',\n    Indonesian: 'id',\n    Yiddish: 'yi'\n};\n\nlet createLocalFiles = () => {\n    Object.values(codes).forEach((local) => {\n        if (local === defaultSourceLang) return;\n        const p = `./src/assets/i18n/${local}.json`;\n        if (fs.existsSync(p)) {\n            console.log('exists ' + p);\n        } else {\n            fs.writeFileSync(p, '', {encoding: 'utf8', flag: 'w'});\n        }\n    });\n};\n\n// createLocalFiles();\n\nlet sourceFile = (local) => {\n    try {\n        return JSON.parse(fs.readFileSync(`./src/assets/i18n/${local}.json`, 'utf8'));\n    } catch (e) {\n        return null;\n    }\n\n};\n\nlet getLocals = () => {\n    return new Promise((resolve, reject) => {\n        const locals = [];\n        fs.readdir(i18Dir, (err, files) => {\n            files.forEach(file => {\n                if (file === `${defaultSourceLang}.json`) return;\n                file = file.replace(/\\.json/, '');\n                locals.push(file);\n            });\n            resolve(locals);\n        });\n    });\n};\n\nlet translate = (word, local) => {\n    return new Promise((resolve, reject) => {\n        googleTranslate.translate(word, local, function (err, translation) {\n            if (translation === undefined) {\n                console.log('>> google error ' + err + ' ' + word + ' ' + local);\n            } else {\n                var translated = cleanProbCharactersV2(translation.translatedText);\n            }\n            resolve(translated);\n        });\n    });\n};\n\nconst cleanProbCharactersV2 = (i_string) => {\n    i_string = i_string.replace(/'/ig, \"\");\n    i_string = i_string.replace(/\"/ig, \"\");\n    i_string = i_string.replace(/}/ig, \"\");\n    i_string = i_string.replace(/{/ig, \"\");\n    i_string = i_string.replace(/\\)/ig, \"\");\n    i_string = i_string.replace(/\\r/ig, \"\");\n    i_string = i_string.replace(/\\n/ig, \"\");\n    i_string = i_string.replace(/()/ig, \"\");\n    return i_string;\n};\n\nconst localSource = sourceFile(defaultSourceLang);\n\n(async function asyncConnect() {\n    try {\n        const languages = await getLocals(3000);\n        for (let i = 0; i < languages.length; i++) {\n            let final = {};\n            const local = languages[i];\n            console.log('processing local ' + local + ' >>>');\n            const destlSource = sourceFile(local);\n            if (destlSource) {\n                final = destlSource;\n            }\n            for (section in localSource) {\n                if (!final[section])\n                    final[section] = {};\n                const words = localSource[section];\n                for (word in words) {\n                    if (destlSource && destlSource[section] && destlSource[section][word]) {\n                        final[section][word] = destlSource[section][word]\n                    } else {\n                        console.log('   >>> ' + section + ' ' + words[word]);\n                        const newWord = await translate(words[word], local);\n                        console.log('       ### translated to ' + newWord);\n                        final[section][word] = newWord;\n                    }\n                }\n            }\n            const f = i18Dir + '/' + local + '.json';\n            try {\n                fs.writeFileSync(f, JSON.stringify(final, null, '\\t'), {encoding: 'utf8', flag: 'w'});\n            } catch (err) {\n                console.error(err);\n            }\n\n        }\n    } catch (err) {\n        console.log('problem encountered ' + err);\n        client.end()\n    }\n})();\n"})}),"\n",(0,s.jsx)(e.h2,{id:"expected-output",children:"Expected output:"}),"\n",(0,s.jsx)("img",{className:"gif",src:(0,i.A)("/img/translation-script-result.png")})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(g,{...n})}):g(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var s=t(6540);const r={},i=s.createContext(r);function o(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);