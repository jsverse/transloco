"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[8350],{9895:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var n=o(2540),a=o(3023);const t={title:"Message Format",description:"Plugins - Message Format | Transloco Angular i18n"},r=void 0,i={id:"plugins/message-format",title:"Message Format",description:"Plugins - Message Format | Transloco Angular i18n",source:"@site/docs/plugins/message-format.mdx",sourceDirName:"plugins",slug:"/plugins/message-format",permalink:"/transloco/docs/plugins/message-format",draft:!1,unlisted:!1,editUrl:"https://github.com/jsverse/transloco/edit/master/docs/docs/plugins/message-format.mdx",tags:[],version:"current",frontMatter:{title:"Message Format",description:"Plugins - Message Format | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Scoped Library Extractor",permalink:"/transloco/docs/tools/scope-lib-extractor"},next:{title:"Persist Translations",permalink:"/transloco/docs/plugins/persist-translations"}},l={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Locale initialization",id:"locale-initialization",level:2},{value:"Advanced configuration",id:"advanced-configuration",level:2},{value:"Caching (from v3)",id:"caching-from-v3",level:2}];function d(e){const s={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["Transpiler for ",(0,n.jsx)(s.code,{children:"@jsverse/transloco"})," that uses ",(0,n.jsx)(s.code,{children:"@messageformat/core"})," to compile translations using ICU syntax for handling pluralization and gender."]}),"\n",(0,n.jsx)(s.p,{children:"Messageformat is a mechanism for handling both pluralization and gender in your app."}),"\n",(0,n.jsxs)(s.p,{children:["You can see its format guide ",(0,n.jsx)(s.a,{href:"https://messageformat.github.io/messageformat/guide/",children:"here"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"npm i @jsverse/transloco-messageformat\n"})}),"\n",(0,n.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"MessageFormatTranspiler"})," is compatible with the ",(0,n.jsx)(s.code,{children:"DefaultTranspiler"})," and therefore you can switch without worry that it will break your current translations."]}),"\n",(0,n.jsx)(s.p,{children:"It then enables support for the following within your i18n translation files:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",metastring:'title="en.json"',children:'{\n  "mySelectRule": "{myVar, select, val1 {Value 1} val2 {Value 2} other {Other Value}}",\n  "myPluralRule": "{myCount, plural, =0 {no results} one {1 result} other {# results}}"\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["To enable this plugin, add the following import in your ",(0,n.jsx)(s.code,{children:"TranslocoRootModule"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="transloco-root.module.ts"',children:"import { provideTranslocoMessageformat } from '@jsverse/transloco-messageformat';\n\n@NgModule({\n  providers: [\n    provideTranslocoMessageformat()\n  ]\n  ...\n})\nexport class TranslocoRootModule {}\n"})}),"\n",(0,n.jsx)(s.h2,{id:"locale-initialization",children:"Locale initialization"}),"\n",(0,n.jsxs)(s.p,{children:["By default, messageformat initializes ",(0,n.jsx)(s.em,{children:"all"})," locales. You could also provide the locales you will need:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="transloco-root.module.ts"',children:"@NgModule({\n  providers: [\n    provideTranslocoMessageformat({\n        locales: 'en-GB'\n    })\n  ],\n  ...\n})\nexport class TranslocoRootModule {}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["The value for ",(0,n.jsx)(s.code,{children:"locales"})," is either a string or an array of strings. The first locale is used as the default locale by messageformat. More info ",(0,n.jsx)(s.a,{href:"https://messageformat.github.io/messageformat/api/core.messageformat._constructor_/",children:"here"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"advanced-configuration",children:"Advanced configuration"}),"\n",(0,n.jsxs)(s.p,{children:["MessageFormat instances provides some options to influence its behaviour, among them ",(0,n.jsx)(s.code,{children:"customFormatters"}),", ",(0,n.jsx)(s.code,{children:"biDiSupport"}),", and ",(0,n.jsx)(s.code,{children:"strictNumberSign"}),". Learn about their meaning ",(0,n.jsx)(s.a,{href:"https://messageformat.github.io/messageformat/api/core.messageformatoptions/",children:"here"})]}),"\n",(0,n.jsx)(s.p,{children:"This is how you would enable bidirectional support and add a custom formatter, for example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="transloco-root.module.ts"',children:" @NgModule({\n   imports: [\n     TranslocoMessageFormatModule.forRoot({\n         biDiSupport: true,\n         customFormatters: { upcase: v => v.toUpperCase() }\n     })\n   ],\n   ...\n })\n export class TranslocoRootModule {}\n"})}),"\n",(0,n.jsx)(s.h2,{id:"caching-from-v3",children:"Caching (from v3)"}),"\n",(0,n.jsxs)(s.p,{children:["By default, the messageformat compile output is cached to reduce computing times, you can disable caching by passing the ",(0,n.jsx)(s.code,{children:"enableCache"})," option:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="transloco-root.module.ts"',children:"@NgModule({\n  imports: [\n    TranslocoMessageFormatModule({\n        enableCache: false,\n    })\n  ],\n  ...\n})\nexport class TranslocoRootModule {}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3023:(e,s,o)=>{o.d(s,{R:()=>r,x:()=>i});var n=o(3696);const a={},t=n.createContext(a);function r(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);