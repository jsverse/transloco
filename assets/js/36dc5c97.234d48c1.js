"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[3011],{1962:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=r(2540),s=r(3023);const o={title:"Prefetch the User Language",description:"Recipe - Prefetch the User Language | Transloco Angular i18n"},c=void 0,a={id:"recipes/prefetch",title:"Prefetch the User Language",description:"Recipe - Prefetch the User Language | Transloco Angular i18n",source:"@site/docs/recipes/prefetch.mdx",sourceDirName:"recipes",slug:"/recipes/prefetch",permalink:"/transloco/docs/recipes/prefetch",draft:!1,unlisted:!1,editUrl:"https://github.com/jsverse/transloco/edit/master/docs/docs/recipes/prefetch.mdx",tags:[],version:"current",frontMatter:{title:"Prefetch the User Language",description:"Recipe - Prefetch the User Language | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Component",permalink:"/transloco/docs/schematics/component"},next:{title:"Using xliff",permalink:"/transloco/docs/recipes/xliff"}},i={},l=[{value:"Prefetch the User Language",id:"prefetch-the-user-language",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"prefetch-the-user-language",children:"Prefetch the User Language"}),"\n",(0,t.jsx)(n.p,{children:"We recommend pre-emptively fetching the user\u2019s data from the server, including internationalization settings, and making it available to the components, before we allow the user to interact with them."}),"\n",(0,t.jsx)(n.p,{children:"We want to ensure the data is available, because we don\u2019t want to incur a bad user experience, such as jumpy content or flickering CSS."}),"\n",(0,t.jsxs)(n.p,{children:["Here's how you can achieve this using the ",(0,t.jsx)(n.code,{children:"APP_INITIALIZER"})," token:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { APP_INITIALIZER } from '@angular/core';\nimport { UserService } from './user.service';\nimport { TranslocoService } from '@jsverse/transloco';\n\nexport function preloadUser(userService: UserService, transloco: TranslocoService) {\n  return function() {\n    return userService.getUser().then(({ lang }) => {\n      transloco.setActiveLang(lang);\n      return transloco.load(lang).toPromise();\n    }\n  };\n}\n\nexport const preLoad = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: preloadUser,\n  deps: [UserService, TranslocoService]\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will make sure the application doesn't bootstrap before Transloco loads the translation file based on the current user's language."}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about it in ",(0,t.jsx)(n.a,{href:"https://netbasal.com/optimize-user-experience-while-your-angular-app-loads-7e982a67ff1a",children:"this article"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},3023:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var t=r(3696);const s={},o=t.createContext(s);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);